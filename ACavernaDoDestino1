package acavernadodestino1;

import java.util.Random;
import java.util.Scanner;

public class ACavernaDoDestino1 {

    private static Scanner scanner = new Scanner(System.in);
    private static Random random = new Random();
    private static boolean saiuDaCaverna = false;
    private static int vidaJogador = 100;
    private static String nomeJogador = "Aventureiro"; 

    public static void main(String[] args) {
        System.out.println("Bem-vindo à Caverna do Destino, bravo aventureiro!");
        System.out.print("Digite o nome do seu personagem: ");
        nomeJogador = scanner.nextLine();
        System.out.println();
        System.out.println(nomeJogador + ", você está explorando uma floresta misteriosa quando encontra uma caverna oculta entre as árvores.");
        System.out.println();
        System.out.println("Um velho pergaminho que você carrega diz que dentro dela há um artefato mágico poderoso, mas também perigos desconhecidos.");
        System.out.println();
        System.out.println("Ao entrar na caverna, a passagem atrás de você desmorona, e agora só há um caminho: Seguir em frente.");
        System.out.println();
        System.out.println("Depois de caminhar por alguns metros, você encontra duas passagens:");
        System.out.println();
        System.out.println("- Um corredor iluminado por tochas azuis, com símbolos antigos gravados nas paredes. Parece seguro, mas algo naquelas luzes\nnão parece natural.");
        System.out.println("- Um túnel escuro e estreito, de onde você ouve um som distante de água corrente. A escuridão é assustadora, mas pode\nlevar a uma saída.");
        System.out.println();
        escolherCaminho();

        if (saiuDaCaverna) {
            System.out.println();
            System.out.println("Você conseguiu sair da Caverna do Destino, são e salvo! (por enquanto)");
        } else if (vidaJogador <= 0) {
            System.out.println();
            System.out.println("Você sucumbiu aos perigos da Caverna do Destino...");
        } else {
            System.out.println();
            System.out.println("A Caverna do Destino provou ser um desafio muito grande para você hoje...");
        }

        scanner.close();
    }

    private static void escolherCaminho() {
        System.out.println(nomeJogador + " escolha o seu caminho:\n1 para o corredor iluminado\n2 para o túnel escuro ");
        int escolha = scanner.nextInt();
        scanner.nextLine();

        switch (escolha) {
            case 1:
                System.out.println();
                System.out.println();
                corredorIluminado();
                break;
            case 2:
                System.out.println();
                System.out.println();
                tunelEscuro();
                break;
            default:
                System.out.println("Escolha inválida. A caverna parece confusa e você tropeça.");
                escolherCaminho();
        }
    }

    private static void corredorIluminado() {
        System.out.println("Você entra no corredor iluminado pelas tochas azuis. Os símbolos antigos nas paredes emanam uma energia estranha.");
        System.out.println("De repente, as tochas azuis brilham intensamente e você sente o chão sumir sob seus pés...");
        System.out.println();
        System.out.println();
        System.out.println("Você foi transportado para um labirinto ilusório!");
        System.out.println();
        System.out.println();
        System.out.println("Paredes mudam de lugar, e o caminho a frente é incerto.");
        System.out.println("Para sair, você precisa responder a um enigma:");
        System.out.println();
        System.out.println("O que tem cidades, mas não tem casas, florestas, mas não tem árvores e água, mas não tem peixes?");
        System.out.print("Sua resposta: ");
        String resposta = scanner.nextLine().trim().toLowerCase();
        System.out.println();

        if (resposta.equals("um mapa")) {
            System.out.println("Correto! Uma porta invisível se abre à sua frente, levando para fora do labirinto.");
            saiuDaCaverna = true;
        } else {
            System.out.println("Incorreto! As paredes do labirinto se fecham ao seu redor. Você está preso para sempre...");
        }
    }

    private static void tunelEscuro() {
        System.out.println("Você se aventura no túnel escuro. A escuridão é quase total, e o som da água corrente ecoa à frente.");
        System.out.println();
        System.out.println("Você segue o som, tropeçando em pedras soltas, até que a escuridão se dissipa um pouco e você vê um rio subterrâneo.");
        System.out.println("A correnteza parece forte, mas pode ser a saída.");
        System.out.println();
        System.out.println();
        System.out.println("O que você faz, " + nomeJogador + "?");
        System.out.println();
        System.out.println("1. Confiar na correnteza e pular no rio.");
        System.out.println("2. Hesitar e tentar voltar pelo túnel.");
        int escolha = scanner.nextInt();
        scanner.nextLine();
        System.out.println();

        switch (escolha) {
            case 1:
                System.out.println("Você pula no rio. A água está gelada, mas a correnteza o leva rapidamente.");
                System.out.println("Depois de ser levado por um tempo, você vê uma luz no fim do túnel e é jogado para fora da caverna!");
                saiuDaCaverna = true;
                break;
            case 2:
                System.out.println("Você decide que a correnteza é muito perigosa e tenta voltar pelo túnel escuro.");
                encontrarCriatura();
                break;
            default:
                System.out.println("Decisão confusa na escuridão. Você tropeça e cai.");
                System.out.println();
                encontrarCriatura();
                break;
        }
    }

    private static void encontrarCriatura() {
        System.out.println("No caminho de volta, você ouve um som gutural e encontra uma criatura sombria guardando a entrada da caverna!");
        System.out.println();
        System.out.println("A criatura, um Troll da Caverna, avança com garras afiadas e olhos vermelhos!");
        combate(new Criatura("Troll da Caverna", 60, 15));
    }

    private static void combate(Criatura criatura) {
        System.out.println("Iniciando combate contra o " + criatura.getNome() + "!");
        System.out.println();

        while (vidaJogador > 0 && criatura.getVida() > 0) {
            System.out.println("Sua vida: " + vidaJogador);
            System.out.println(criatura.getNome() + ": " + criatura.getVida());
            System.out.println();
            System.out.println("O que você faz?");
            System.out.println("1. Atacar");
            System.out.println("2. Tentar fugir");
            int escolhaCombate = scanner.nextInt();
            scanner.nextLine();
            System.out.println();

            switch (escolhaCombate) {
                case 1:
                    atacarCriatura(criatura);
                    if (criatura.getVida() > 0) {
                        ataqueCriatura(criatura);
                    }
                    break;
                case 2:
                    tentarFugir(criatura);
                    return;
                default:
                    System.out.println("Ação inválida!");
            }
        }

        if (vidaJogador <= 0) {
            System.out.println("Você foi derrotado pelo " + criatura.getNome() + "...");
        } else {
            System.out.println("Você derrotou o " + criatura.getNome() + "! A passagem para fora da caverna parece bloqueada.");
            System.out.println();
            System.out.println("Sem outra opção, você retorna para o rio subterrâneo...");
            System.out.println("Com mais confiança agora, você pula na correnteza e é levado para fora da caverna em segurança!");
            saiuDaCaverna = true;
        }
    }

    private static void atacarCriatura(Criatura criatura) {
        int danoJogador = random.nextInt(20) + 10;
        System.out.println("Você ataca o " + criatura.getNome() + " e causa " + danoJogador + " de dano.");
        criatura.receberDano(danoJogador);
        System.out.println();
    }

    private static void ataqueCriatura(Criatura criatura) {
        int danoCriatura = random.nextInt(15) + 5; 
        System.out.println("O " + criatura.getNome() + " ataca você e causa " + danoCriatura + " de dano.");
        vidaJogador -= danoCriatura;
        if (vidaJogador < 0) {
            vidaJogador = 0;
        }
    }

    private static void tentarFugir(Criatura criatura) {
        int chanceFuga = random.nextInt(10);
        if (chanceFuga >= 3) { 
            System.out.println("Você consegue escapar do " + criatura.getNome() + " e corre de volta para o rio subterrâneo.");
            System.out.println("Sem outra escolha, você se joga na correnteza e é levado para fora da caverna!");
            saiuDaCaverna = true;
        } else {
            System.out.println("Você tenta fugir, mas o " + criatura.getNome() + " é muito rápido e bloqueia seu caminho!");
            System.out.println();
            ataqueCriatura(criatura);
        }
    }
}

class Criatura {
    private String nome;
    private int vida;
    private int ataque;

    public Criatura(String nome, int vida, int ataque) {
        this.nome = nome;
        this.vida = vida;
        this.ataque = ataque;
    }

    public String getNome() {
        return nome;
    }

    public int getVida() {
        return vida;
    }

    public int getAtaque() {
        return ataque;
    }

    public void receberDano(int dano) {
        this.vida -= dano;
        if (this.vida < 0) {
            this.vida = 0;
        }
    }
}
